@page "/manage-delivery-notes"
@using TunNetCom.SilkRoadErp.Sales.Contracts.DeliveryNote
@using TunNetCom.SilkRoadErp.Sales.WebApp.Services.DeliveryNote
@inject DeliveryNoteService DeliveryNoteService

<PageTitle>Manage Delivery Notes</PageTitle>

<h3>Manage Delivery Notes</h3>

<input @bind="searchKeyword" placeholder="Search..." />
<input type="checkbox" @bind="isFactured" /> Factured

<button @onclick="LoadDeliveryNotes">Search</button>

@if (deliveryNotes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Num</th>
                <th>Date</th>
                <th>TotHTva</th>
                <th>TotTva</th>
                <th>NetPayer</th>
                <th>TempBl</th>
                <th>NumFacture</th>
                <th>ClientId</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var note in deliveryNotes)
            {
                <tr>
                    <td>@note.Num</td>
                    <td>@note.Date</td>
                    <td>@note.TotHTva</td>
                    <td>@note.TotTva</td>
                    <td>@note.NetPayer</td>
                    <td>@note.TempBl</td>
                    <td>@note.NumFacture</td>
                    <td>@note.ClientId</td>
                </tr>
            }
        </tbody>
    </table>

    <button @onclick="PreviousPage" disabled="@(!deliveryNotes.HasPrevious)">Previous</button>
    <button @onclick="NextPage" disabled="@(!deliveryNotes.HasNext)">Next</button>
}

@code {
    private PagedList<DeliveryNoteResponse>? deliveryNotes;
    private int currentPage = 1;
    private int pageSize = 10;
    private string? searchKeyword;
    private bool? isFactured;

    protected override async Task OnInitializedAsync()
    {
        await LoadDeliveryNotes();
    }

    private async Task LoadDeliveryNotes()
    {
        deliveryNotes = await DeliveryNoteService.GetDeliveryNotes(currentPage, pageSize, searchKeyword, isFactured);
    }

    private async Task PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            await LoadDeliveryNotes();
        }
    }

    private async Task NextPage()
    {
        if (deliveryNotes?.HasNext ?? false)
        {
            currentPage++;
            await LoadDeliveryNotes();
        }
    }
}
